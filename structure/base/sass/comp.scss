/*   VENDOR - Default fall-backs and external files.
=========================================== */
@import '../assets/vendor/foundation.css';

/*   BASE - Base Variable file along
with starting point Mixins and Placeholders.
=========================================== */
// E.G. variables, mixins and placeholders

// Variables
$key-lime: #D6F48D;
$sandstorm-yellow: #EAD637;
$satin-gold: #CBA328;
$licorice-brown: #230C0F;
$turquoise-green: #A2D3C2;

$open-sans: 'Open Sans', sans-serif;
$oswald: 'Oswald', sans-serif;

// Placeholders
%bg-image-full {
  width: 100%;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
}

%btn-default {
  color: #FFF;
  cursor: pointer;
  font-family: $open-sans;
  font-size: 1.2em;
  border: none;
  shadow: none;
  padding: 0.8rem;
  width: 120px;
  text-align: center;
  display: block;
}

// Mixins
@mixin rounded-corner($arc) {
  -moz-border-radius: $arc;
  -webkit-border-radius: $arc;
  border-radius: $arc;
}

@mixin angle($pseudo, $flip: false, $angle: 3.5deg) {
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      position: absolute;
      display: block;
      height: 50%;
      left: 0;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // Chrome Windows fix
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;
        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;
        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;
        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;
        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}

@mixin btn-background($btn-bg) {
  @extend %btn-default;
  background-color: $btn-bg;
  &:hover {
    background-color: lighten($btn-bg, 10%);
  }
}

/*   FRAMEWORK - Structure and layout files.
=========================================== */
// E.G. grid, breakpoints and layout
%body-text-head {
    h1 {
      line-height: 2.4;
      font-size: 28px;
    }
    h2 {
      line-height: 2;
      font-size: 24px;
    }
    h3 {
      line-height: 1.8;
      font-size: 20px;
    }
    p {
      line-height: 1.6;
      font-size: 17px;
    }
}

/*   MODULES - Re-usable site elements.
=========================================== */
// E.G. buttons, lists and tabs
.button-default {
  @include btn-background($licorice-brown);
  @include rounded-corner(10px);
}

.page {
  width: 100%;
}
.hero__outer {
  @extend %bg-image-full;
  background-image: url('../assets/img/work.jpg');
  height: 50vh;
  display: flex;
  justify-content: center;
  align-items: center;
  .hero__inner {
    @include rounded-corner(10px);
    width: 750px;
    height: 250px;
  }
  .hero__inner--content {
    @extend %body-text-head;
  }
}
.section__content {
  @include angle(before);
  background: $licorice-brown;
  width: 100%;
  height: 300px;
}
